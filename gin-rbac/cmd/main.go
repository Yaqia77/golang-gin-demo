package main

import (
	"gin-rbac/internal/router"

	"github.com/gin-gonic/gin"
)

func main() {
	// 创建一个默认的路由器
	r := gin.Default()

	// 注册路由
	router.SetupRoutes(r)
	r.Run(":8080")
}

//角色基础访问控制（Role-Based Access Control, RBAC）是一种常见的权限管理方式，它通过将用户划分为不同的角色，并为每个角色分配不同的权限，来控制用户对系统资源的访问。

//gin-rbac 是一个基于 gin 框架的 RBAC 权限管理系统，它提供了用户角色和权限的管理功能，并提供了基于角色的访问控制（Role-Based Access Control, RBAC）的权限控制。

//gin-rbac 项目的主要功能如下：

//用户管理：用户的注册、登录、退出、信息修改等功能；

//角色管理：角色的创建、修改、删除、分配权限等功能；

//权限管理：权限的创建、修改、删除等功能；

//资源管理：资源的创建、修改、删除等功能；

//角色分配：用户可以分配多个角色，并为每个角色分配不同的权限；

//基于角色的访问控制：用户可以根据自己的角色来访问系统资源；

//gin-rbac 项目的架构如下：

//gin-rbac 项目的主要目录结构如下：

//cmd：项目的入口文件，主要用于启动项目；

//internal：项目的核心代码目录，主要包含以下子目录：

//config：项目的配置目录，主要用于配置项目的数据库、日志等信息；

//model：项目的模型目录，主要用于定义项目的数据库模型；

//service：项目的服务目录，主要用于实现项目的业务逻辑；

//router：项目的路由目录，主要用于注册项目的路由；
